{"version":3,"file":"bootstrap-select-country.min.js","sources":["../../node_modules/i18n-iso-countries/index.js","../../js/bootstrap-select-country.js"],"sourcesContent":["\"use strict\";\n\nvar codes = require(\"./codes.json\");\nvar registeredLocales = {};\n\n/*\n * All codes map to ISO 3166-1 alpha-2\n */\nvar alpha2 = {},\n  alpha3 = {},\n  numeric = {},\n  invertedNumeric = {};\n\ncodes.forEach(function(codeInformation) {\n  var s = codeInformation;\n  alpha2[s[0]] = s[1];\n  alpha3[s[1]] = s[0];\n  numeric[s[2]] = s[0];\n  invertedNumeric[s[0]] = s[2];\n});\n\nfunction formatNumericCode(code) {\n  return String('000'+(code ? code : '')).slice(-3);\n}\n\nfunction registerLocale(localeData) {\n  if (!localeData.locale) {\n    throw new TypeError('Missing localeData.locale');\n  }\n\n  if (!localeData.countries) {\n    throw new TypeError('Missing localeData.countries');\n  }\n\n  registeredLocales[localeData.locale] = localeData.countries;\n}\n\nexports.registerLocale = registerLocale;\n\n/*\n * @param code Alpha-3 code\n * @return Alpha-2 code or undefined\n */\nfunction alpha3ToAlpha2(code) {\n  return alpha3[code];\n}\nexports.alpha3ToAlpha2 = alpha3ToAlpha2;\n\n/*\n * @param code Alpha-2 code\n * @return Alpha-3 code or undefined\n */\nfunction alpha2ToAlpha3(code) {\n  return alpha2[code];\n}\nexports.alpha2ToAlpha3 = alpha2ToAlpha3;\n\n/*\n * @param code Alpha-3 code\n * @return Numeric code or undefined\n */\nfunction alpha3ToNumeric(code) {\n  return invertedNumeric[alpha3ToAlpha2(code)];\n}\nexports.alpha3ToNumeric = alpha3ToNumeric;\n\n/*\n * @param code Alpha-2 code\n * @return Numeric code or undefined\n */\nfunction alpha2ToNumeric(code) {\n  return invertedNumeric[code];\n}\nexports.alpha2ToNumeric = alpha2ToNumeric;\n\n/*\n * @param code Numeric code\n * @return Alpha-3 code or undefined\n */\nfunction numericToAlpha3(code) {\n  var padded = formatNumericCode(code);\n  return alpha2ToAlpha3(numeric[padded]);\n}\nexports.numericToAlpha3 = numericToAlpha3;\n\n/*\n * @param code Numeric code\n * @return Alpha-2 code or undefined\n */\nfunction numericToAlpha2(code) {\n  var padded = formatNumericCode(code);\n  return numeric[padded];\n}\nexports.numericToAlpha2 = numericToAlpha2;\n\n/*\n * @param code ISO 3166-1 alpha-2, alpha-3 or numeric code\n * @return ISO 3166-1 alpha-3\n */\nfunction toAlpha3(code) {\n  if (typeof code === \"string\") {\n    if (/^[0-9]*$/.test(code)) {\n      return numericToAlpha3(code);\n    }\n    if(code.length === 2) {\n      return alpha2ToAlpha3(code.toUpperCase());\n    }\n    if (code.length === 3) {\n      return code.toUpperCase();\n    }\n  }\n  if (typeof code === \"number\") {\n    return numericToAlpha3(code);\n  }\n  return undefined;\n}\nexports.toAlpha3 = toAlpha3;\n\n/*\n * @param code ISO 3166-1 alpha-2, alpha-3 or numeric code\n * @return ISO 3166-1 alpha-2\n */\nfunction toAlpha2(code) {\n  if (typeof code === \"string\") {\n    if (/^[0-9]*$/.test(code)) {\n      return numericToAlpha2(code);\n    }\n    if (code.length === 2) {\n      return code.toUpperCase();\n    }\n    if(code.length === 3) {\n      return alpha3ToAlpha2(code.toUpperCase());\n    }\n  }\n  if (typeof code === \"number\") {\n    return numericToAlpha2(code);\n  }\n  return undefined;\n}\nexports.toAlpha2 = toAlpha2;\n\n/*\n * @param code ISO 3166-1 alpha-2, alpha-3 or numeric code\n * @param lang language for country name\n * @return name or undefined\n */\nexports.getName = function(code, lang) {\n  try {\n    var d = registeredLocales[lang.toLowerCase()];\n    return d[toAlpha2(code)];\n  } catch (err) {\n    return undefined;\n  }\n};\n\n/*\n * @param lang language for country names\n * @return Object of country code mapped to county name\n */\nexports.getNames = function(lang) {\n  var d = registeredLocales[lang.toLowerCase()];\n  if (d === undefined) {\n    return {};\n  }\n  return d;\n};\n\n/*\n * @param name name\n * @param lang language for country name\n * @return ISO 3166-1 alpha-2 or undefined\n */\nexports.getAlpha2Code = function(name, lang) {\n  try {\n    var p, codenames = registeredLocales[lang.toLowerCase()];\n    for (p in codenames) {\n      if (codenames.hasOwnProperty(p)) {\n        if (codenames[p].toLowerCase() === name.toLowerCase()) {\n          return p;\n        }\n      }\n    }\n    return undefined;\n  } catch (err) {\n    return undefined;\n  }\n};\n\n/*\n * @return Object of alpha-2 codes mapped to alpha-3 codes\n */\nexports.getAlpha2Codes = function() {\n  return alpha2;\n};\n\n/*\n * @param name name\n * @param lang language for country name\n * @return ISO 3166-1 alpha-3 or undefined\n */\nexports.getAlpha3Code = function(name, lang) {\n  var alpha2 = this.getAlpha2Code(name, lang);\n  if (alpha2) {\n    return this.toAlpha3(alpha2);\n  } else {\n    return undefined;\n  }\n};\n\n/*\n * @return Object of alpha-3 codes mapped to alpha-2 codes\n */\nexports.getAlpha3Codes = function() {\n  return alpha3;\n};\n\n/*\n * @return Object of numeric codes mapped to alpha-2 codes\n */\nexports.getNumericCodes = function() {\n  return numeric;\n};\n\n/*\n * @return Array of supported languages\n */\nexports.langs = function() {\n  return Object.keys(registeredLocales);\n};\n\n/*\n * @param code ISO 3166-1 alpha-2, alpha-3 or numeric code\n * @return Boolean\n */\nexports.isValid = function(code) {\n  return alpha3.hasOwnProperty(code) || alpha2.hasOwnProperty(code) ||\n    numeric.hasOwnProperty(code);\n};\n","import countries from \"i18n-iso-countries\";\nimport langs_en from \"i18n-iso-countries/langs/en.json\";\n\ncountries.registerLocale(langs_en);\nvar langCountries = countries.getNames('en');\nvar allCountries = Object.keys(langCountries).map((code) => {\n\treturn {\n\t\tname: langCountries[code],\n\t\tcode: code\n\t};\n});\n\nlet initialize = function(opts) {\n  var countryInput = $(this);\n  var countryList = \"\";\n\n    //set defaults\n    for (var i = 0; i < countryInput.length; i++) {\n\n        //check if flag\n        var flag = countryInput.eq(i).data('flag');\n\n        if (flag) {\n            countryList = \"\";\n\n            //for each build list with flag\n            $.each(allCountries, function (index, country) {\n                var flagIcon = \"css/flags/\" + country.code.toLowerCase() + \".png\";\n                countryList += \"<option data-country-code='\" + country.code + \"' data-tokens='\" + country.code + \" \" + country.name + \"' style='padding-left:25px; background-position: 4px 7px; background-image:url(\" + flagIcon + \");background-repeat:no-repeat;' value='\" + country.name + \"'>\" + country.name + \"</option>\";\n            });\n\n            //add flags to button\n            countryInput.eq(i).on('loaded.bs.select', function (e) {\n                var button = $(this).closest('.btn-group').children('.btn');\n                button.hide();\n                var def = $(this).find(':selected').data('country-code').toLowerCase();\n                var flagIcon = \"css/flags/\" + def + \".png\";\n                button.css(\"background-size\", '20px');\n                button.css(\"background-position\", '10px 9px');\n                button.css(\"padding-left\", '40px');\n                button.css(\"background-repeat\", 'no-repeat');\n                button.css(\"background-image\", \"url('\" + flagIcon + \"'\");\n                button.show();\n            });\n\n            //change flag on select change\n            countryInput.eq(i).on('change', function () {\n                var button = $(this).closest('.btn-group').children('.btn');\n                var def = $(this).find(':selected').data('country-code').toLowerCase();\n                var flagIcon = \"css/flags/\" + def + \".png\";\n                button.css(\"background-size\", '20px');\n                button.css(\"background-position\", '10px 9px');\n                button.css(\"padding-left\", '40px');\n                button.css(\"background-repeat\", 'no-repeat');\n                button.css(\"background-image\", \"url('\" + flagIcon + \"'\");\n\n            });\n        }else{\n            countryList =\"\";\n\n            //for each build list without flag\n            $.each(allCountries, function (index, country) {\n                countryList += \"<option data-country-code='\" + country.code + \"' data-tokens='\" + country.code + \" \" + country.name + \"' value='\" + country.name + \"'>\" + country.name + \"</option>\";\n            });\n\n\n        }\n\n         //append country list\n        countryInput.eq(i).html(countryList);\n\n\n        //check if default\n        var def = countryInput.eq(i).data('default');\n        //if there's a default, set it\n        if (def) {\n            countryInput.eq(i).val(def);\n        }\n\n\n    }\n\n};\n\n$.fn.countrypicker = initialize;\n\n$('.countrypicker').countrypicker();\n\nexport default initialize;\n"],"names":["alpha2","alpha3","numeric","invertedNumeric","formatNumericCode","code","String","slice","alpha3ToAlpha2","alpha2ToAlpha3","numericToAlpha3","padded","numericToAlpha2","toAlpha2","test","length","toUpperCase","forEach","codeInformation","s","exports","localeData","locale","TypeError","countries","lang","registeredLocales","toLowerCase","err","d","undefined","name","p","codenames","hasOwnProperty","this","getAlpha2Code","toAlpha3","Object","keys","registerLocale","langs_en","langCountries","getNames","allCountries","map","initialize","opts","countryInput","$","countryList","i","eq","data","each","index","country","flagIcon","on","e","button","closest","children","hide","find","css","show","html","def","val","fn","countrypicker"],"mappings":"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"}